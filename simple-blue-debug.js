// Simple test to check if Blue team genome updates are working// Paste this into the browser console after the game has loaded// Check if evolution system existsif (typeof evolution === 'undefined') {} else {    // Clear cache to force fresh lookup    if (typeof genomeCache !== 'undefined') {        genomeCache.lastPoolSize = 0;        genomeCache.lastCacheTime = 0;        genomeCache.lastPoolChecksum = null;        genomeCache.redBest = null;        genomeCache.blueBest = null;    }    // Force update genome display    if (typeof updateGenomeDisplay === 'function') {        updateGenomeDisplay();    }    // Check DOM elements after update    setTimeout(() => {        const elements = [            'redAggression', 'redSpeed', 'redAccuracy', 'redChampionFitness',            'blueAggression', 'blueSpeed', 'blueAccuracy', 'blueChampionFitness'        ];        elements.forEach(id => {            const element = document.getElementById(id);            const value = element ? element.textContent : 'NOT FOUND';            const team = id.startsWith('red') ? 'ðŸ”´' : 'ðŸ”µ';        });        // Check if values are actually different        const redAgg = document.getElementById('redAggression')?.textContent;        const blueAgg = document.getElementById('blueAggression')?.textContent;        if (redAgg && blueAgg) {            if (redAgg === blueAgg) {            } else {            }        }        // Show candidate pool info        if (evolution.candidatePool) {            const redCount = evolution.candidatePool.filter(c => c.team === 'red').length;            const blueCount = evolution.candidatePool.filter(c => c.team === 'blue').length;            const unassignedCount = evolution.candidatePool.filter(c => !c.team).length;            if (blueCount === 0) {            }        }    }, 100);}