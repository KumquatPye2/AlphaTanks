// Debug script to check genome update status in the browser// Run this in the browser console// Check if evolution system is availableif (typeof evolution !== 'undefined' && evolution.candidatePool) {    // Show candidate pool by team    const redCandidates = evolution.candidatePool.filter(c => c.team === 'red');    const blueCandidates = evolution.candidatePool.filter(c => c.team === 'blue');    redCandidates.forEach((c, i) => {    });    blueCandidates.forEach((c, i) => {    });    // Test the getBestGenomeForTeam function    if (typeof getBestGenomeForTeam === 'function') {        const redBest = getBestGenomeForTeam('red');        const blueBest = getBestGenomeForTeam('blue');,            battles: redBest.battles,            wins: redBest.wins,            genome: redBest.genome?.slice(0, 3).map(v => v.toFixed(2)) + '...'        } : 'null');,            battles: blueBest.battles,            wins: blueBest.wins,            genome: blueBest.genome?.slice(0, 3).map(v => v.toFixed(2)) + '...'        } : 'null');        // Check cache state        if (typeof genomeCache !== 'undefined') {- genomeCache.lastCacheTime, 'ms');        }    } else {    }    // Check DOM elements    const redElements = ['redAggression', 'redSpeed', 'redAccuracy'];    const blueElements = ['blueAggression', 'blueSpeed', 'blueAccuracy'];    redElements.forEach(id => {        const el = document.getElementById(id);    });    blueElements.forEach(id => {        const el = document.getElementById(id);    });} else {}// Instructions